 # ARQUIVO TRADUZIDO POR NAO HAVER VERSAO EM PORTUGUES NA DISTRIBUICAO DO FACES 1.2
 #
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 #
 # Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 #
 # The contents of this file are subject to the terms of either the GNU
 # General Public License Version 2 only ("GPL") or the Common Development
 # and Distribution License("CDDL") (collectively, the "License").  You
 # may not use this file except in compliance with the License. You can obtain
 # a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 # or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 # language governing permissions and limitations under the License.
 #
 # When distributing the software, include this License Header Notice in each
 # file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 # Sun designates this particular file as subject to the "Classpath" exception
 # as provided by Sun in the GPL Version 2 section of the License file that
 # accompanied this code.  If applicable, add the following below the License
 # Header, with the fields enclosed by brackets [] replaced by your own
 # identifying information: "Portions Copyrighted [year]
 # [name of copyright owner]"
 #
 # Contributor(s):
 #
 # If you wish your version of this file to be governed by only the CDDL or
 # only the GPL Version 2, indicate your decision by adding "[Contributor]
 # elects to include this software in this distribution under the [CDDL or GPL
 # Version 2] license."  If you don't indicate a single choice of license, a
 # recipient has the option to distribute your version of this file under
 # either the CDDL, the GPL Version 2 or to extend the choice of license to
 # its licensees as provided above.  However, if you add GPL Version 2 code
 # and therefore, elected the GPL Version 2 license, then the option applies
 # only if the new code is made subject to such option by the copyright
 # holder.
 #


# ==============================================================================
# SPECIFICATION DEFINED MESSAGES
# ==============================================================================


# ==============================================================================
# Erros de componente
# ==============================================================================
javax.faces.component.UIInput.CONVERSION=Erro de conversão ({0}).
javax.faces.component.UIInput.REQUIRED=Valor obrigatório ({0}).
javax.faces.component.UIInput.UPDATE=Um erro ocorreu ao processar a informação enviada ({0}).
javax.faces.component.UISelectOne.INVALID=Valor inválido ({0}).
javax.faces.component.UISelectMany.INVALID=Valor inválido ({0}).


# ==============================================================================
# Erros de conversão
# {0} valor nao convertido
# {1} exemplo de valor correto
# {2} form:campo 
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL={2}: ''{0}'' deve ser um número válido, com ou sem valor decimal.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail={2}: ''{0}'' deve ser um número com valor decimal, com zero ou mais dígitos, que deve ser seguido de sua parte fracionária. Exemplo: {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER={2}: ''{0}'' deve ser um número consistindo de um ou mais dígitos.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail={2}: ''{0}'' deve ser um número consistindo de um ou mais dígitos. Exemplo: {1}
javax.faces.converter.BooleanConverter.BOOLEAN={2}: ''{0}'' deve ser verdadeiro 'true' (verdadeiro) ou 'false' (falso).
javax.faces.converter.BooleanConverter.BOOLEAN_detail={1}: ''{0}'' deve ser verdadeiro 'true' (verdadeiro) ou 'false' (falso).  Outros valores serão avaliados como 'falso'.
javax.faces.converter.ByteConverter.BYTE={2}: ''{0}'' deve ser um número entre 0 e 255.
javax.faces.converter.ByteConverter.BYTE_detail={2}: ''{0}'' dever ser um número entre 0 e 255.  Exemplo: {1}
javax.faces.converter.CharacterConverter.CHARACTER={2}: ''{0}'' dever ser um caracter válido.
javax.faces.converter.CharacterConverter.CHARACTER_detail={1}: ''{0}'' deve ser um caracter ASCII válido.
javax.faces.converter.DateTimeConverter.DATE={2}: ''{0}'' não pode ser compreendido como data.
javax.faces.converter.DateTimeConverter.DATE_detail={2}: ''{0}'' não pode ser compreendido como data. Exemplo: {1}
javax.faces.converter.DateTimeConverter.TIME={2}: ''{0}'' não pode ser compreendido como hora.
javax.faces.converter.DateTimeConverter.TIME_detail={2}: ''{0}'' não pode ser compreendido como hora. Exemplo: {1}
javax.faces.converter.DateTimeConverter.DATETIME={2}: ''{0}'' não pode ser compreendido como data e hora.
javax.faces.converter.DateTimeConverter.DATETIME_detail={2}: ''{0}'' não pode ser compreendido como data e hora. Exemplo: {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE={1}: Um atributo 'padrão' (pattern) ou 'tipo' (type) deve ser especificado para converter o valor ''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE=''{0}'' deve ser um número consistindo de um ou mais dígitos.
javax.faces.converter.DoubleConverter.DOUBLE_detail={2}: ''{0}'' deve ser um número entre 4.9E-324 e 1.7976931348623157E308  Exemplo: {1}
javax.faces.converter.EnumConverter.ENUM={2}: ''{0}'' deve ser conversível para uma enumeração válida.
javax.faces.converter.EnumConverter.ENUM_detail={2}: ''{0}'' deve ser conversível para uma enumeração que contenha a constante ''{1}''.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS={1}: ''{0}'' deve ser conversível para uma enumeração a partir de uma enumeração, porém não foi especificado enumeração.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail={1}: ''{0}'' deve ser conversível para uma enumeração a partir de uma enumeração, porém não foi especificado enumeração.
javax.faces.converter.FloatConverter.FLOAT={2}: ''{0}'' deve ser um número com um ou mais dígitos.
javax.faces.converter.FloatConverter.FLOAT_detail={2}: ''{0}'' deve ser um número entre 1.4E-45 e 3.4028235E38  Exemplo: {1}
javax.faces.converter.IntegerConverter.INTEGER={2}: ''{0}'' deve ser um número inteiro com um ou mais dígitos.
javax.faces.converter.IntegerConverter.INTEGER_detail={2}: ''{0}'' deve ser um número inteiro entre -2.147.483.648 e 2.147.483.647 Exemplo: {1}
javax.faces.converter.LongConverter.LONG={2}: ''{0}'' deve ser um número com um ou mais dígitos.
javax.faces.converter.LongConverter.LONG_detail={2}: ''{0}'' deve ser um número entre -9223372036854775808 e 9223372036854775807 Exemplo: {1}
javax.faces.converter.NumberConverter.CURRENCY={2}: ''{0}'' não pode ser compreendido com um valor monetário.
javax.faces.converter.NumberConverter.CURRENCY_detail={2}: ''{0}'' não pode ser compreendido com um valor monetário. Exemplo: {1}
javax.faces.converter.NumberConverter.PERCENT={2}: ''{0}'' não pode ser compreendido como porcentagem.
javax.faces.converter.NumberConverter.PERCENT_detail={2}: ''{0}'' não pode ser compreendido como porcentagem. Exemplo: {1}
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}'' não é um número.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}'' não é um número. Exemplo: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}'' não é um padrão numérico.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}'' não é um padrão numérico. Exemplo: {1}
javax.faces.converter.ShortConverter.SHORT={2}: ''{0}'' deve ser um número com um ou mais dígitos.
javax.faces.converter.ShortConverter.SHORT_detail={2}: ''{0}'' deve ser um número entre -32768 e 32767 Exemplo: {1}
javax.faces.converter.STRING={1}: Não foi possível converter ''{0}'' para texto.


# ==============================================================================
# Erros de validação
# ==============================================================================
javax.faces.validator.DoubleRangeValidator.MAXIMUM={1}: Valor é maior que o permitido de "{0}"
javax.faces.validator.DoubleRangeValidator.MINIMUM={1}: Valor é menor que o permitido de ''{0}''
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE={2}: Valor fora do intervalo válido de {0} e {1}.
javax.faces.validator.DoubleRangeValidator.TYPE={0}: Valor não é do tipo correto.
javax.faces.validator.LengthValidator.MAXIMUM={1}: Valor é maior que o máximo permitido de ''{0}''
javax.faces.validator.LengthValidator.MINIMUM={1}: Valor é menor que o mínimo permitido de ''{0}''
javax.faces.validator.LongRangeValidator.MAXIMUM={1}: Valor é maior que o máximo permitido de ''{0}''
javax.faces.validator.LongRangeValidator.MINIMUM={1}: Valor é menor que o mínimo permitido de ''{0}''
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE={2}: Valor fora do intervalo válido de {0} e {1}.
javax.faces.validator.LongRangeValidator.TYPE={0}: Tipo incorreto do valor.
javax.faces.validator.NOT_IN_RANGE=Valor fora do intervalo válido de {0} e {1}.
